{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"v-app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $options.sendMessage(), [\"prevent\"]))\n  }, \"Send it\")]), _createElementVNode(\"p\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg.id\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;EACSA,GAAG,EAAC;AAAO;;uBAAhBC,oBAcM,OAdNC,UAcM,GAbFC,oBAAsB,6BAAdC,WAAK,kBAEbD,oBAGO,+BAFHA,oBAAoC;+DAApBC,UAAI;IAAEC,IAAI,EAAC;iDAAXD,UAAI,KACpBD,oBAAqE;IAA7DE,IAAI,EAAC,QAAQ;IAAEC,OAAK,qDAAUC,oBAAW;KAAI,SAAO,KAGhEJ,oBAII,YAHAA,oBAEK,gCADDF,oBAA0DO,6BAAxCJ,cAAQ,EAAfK,GAAG;yBAAdR,oBAA0D;MAA7BS,GAAG,EAAED,GAAG,CAACE;wBAAQF,GAAG","names":["ref","_createElementBlock","_hoisted_1","_createElementVNode","$data","type","onClick","$options","_Fragment","msg","key","id"],"sourceRoot":"","sources":["/Users/rooteleven/Desktop/transcendence/frontend/src/components/MyChat.vue"],"sourcesContent":["<template>\n    <div ref=\"v-app\">\n        <h1> {{ title }} </h1>\n\n        <form>\n            <input v-model=\"text\" type=\"text\" />\n            <button type=\"submit\" @click.prevent=\"sendMessage()\">Send it</button>\n        </form>\n\n        <p>\n            <ul>\n                <li v-for=\"msg of messages\" :key=\"msg.id\"> {{ msg }} </li>\n            </ul>\n        </p>\n\n    </div>\n</template>\n\n<script>\n    import { io } from \"socket.io-client\"\n    export default {\n        ref: '#v-app',\n        data() {\n            return {\n                        title: 'MyChat.Vue component',\n                        text: '',\n                        messages: ['Some message', 'Another messages'],\n                        socket: null,\n                    };\n        },\n        methods: {\n            receiveMessage(msg) {\n                console.log(`recv: ${msg}`);\n                this.messages.push(msg);\n            },\n            sendMessage() {\n                console.log(`send: ${this.text}`);\n                this.socket.emit('msgToServer', this.text);\n                this.text = \"\";\n            }\n        },\n        created() {\n            this.socket = io('http://localhost:3000/');\n            this.socket.on('msgToClient', (msg) => {\n                this.receiveMessage(msg);\n            })\n        },\n    }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}